// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider              = "zod-prisma"
  output                = "./zod"
  relationModel         = true
  modelCase             = "camelCase"
  modelSuffix           = "Schema"
  useDecimalJs          = true
  prismaJsonNullability = true
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  walletAddress String    @unique

  nftProject Project[]
  adSlots    AdSlot[]
  inventory  Inventory[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Project {
  id String @id @default(cuid())

  inventoryId String
  inventory   Inventory @relation(fields: [inventoryId], references: [id])

  underdogProjectId     Int
  collectionMintAddress String

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@index([userId])
  @@index([inventoryId])
}

model Inventory {
  id                   String       @id @default(cuid())
  inventoryName        String
  inventoryWebsiteUri  String
  inventoryImageUri    String
  inventoryDescription String
  inventoryAttributes  Attributes[]

  adSlots AdSlot[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  projects Project[]

  @@index([userId])
}

model Attributes {
  id String @id @default(cuid())

  key         String
  value       String
  Inventory   Inventory? @relation(fields: [inventoryId], references: [id])
  inventoryId String

  @@index([inventoryId])
}

model AdSlot {
  id              String @id @default(cuid())
  slotName        String
  slotDescription String
  slotLength      Float
  slotWidth       Float
  slotWebsiteUri  String
  slotImageUri    String
  slotType        String
  slotPrice       BigInt
  status          String
  slotPlatform    String

  lent           Boolean @default(false)
  nftMintAddress String?
  owner          User?   @relation(fields: [ownerId], references: [id])
  ownerId        String?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  inventory   Inventory @relation(fields: [inventoryId], references: [id], onDelete: Cascade)
  inventoryId String

  @@index([inventoryId])
  @@index([ownerId])
}
